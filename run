#!/bin/bash
# WF 2017-07-05

#ansi colors
#http://www.csc.uvic.ca/~sae/seng265/fall04/tips/s265s047-tips/bash-using-colors.html
blue='\033[0;34m'
red='\033[0;31m'
green='\033[0;32m' # '\e[1;32m' is too bright for white bg.
endColor='\033[0m'

#
# a colored message
#   params:
#     1: l_color - the color of the message
#     2: l_msg - the message to display
#
color_msg() {
  local l_color="$1"
	local l_msg="$2"
	echo -e "${l_color}$l_msg${endColor}"
}

#
# error
#
#   show an error message and exit
#
#   params:
#     1: l_msg - the message to display
error() {
  local l_msg="$1"
	# use ansi red for error
  color_msg $red "Error: $l_msg" 1>&2
  exit 1
}

#
# show usage
#
usage() {
  local p_name=`basename $0`
  echo "$p_name"
  echo "       -h |--help        : show this usage"
  echo "       -rc|--recreate    : recreate the container"
  exit 1
}

# remember the time we started this
start_date=$(date -u +"%s")

while test $# -gt 0
do
  case $1 in
    # help
    -h|--help)
      usage;;

    -rc|--recreate)
      recreate="true";
      ;;
  esac
  shift
done

# set containername
containername=openjscad

#
# prepare optional recreate
#
if [ "$recreate" = "true" ]
then
  color_msg $blue "preparing recreate of $containername"
  color_msg $blue "stopping $containername"
  docker stop $containername
  color_msg $blue "remove $containername"
  docker rm $containername
fi

docker ps | grep $containername
if [ $? -ne 0 ]
then
  wd=$(pwd)
  nohup docker run \
     --publish=8080:8080 \
     --volume $wd/workspace:/openjscad/packages/web/examples/workspace \
     --name $containername \
     bitplan/openjscad:latest&
fi
#find out hostname
hostname=$(hostname)

url=http://$hostname:8080/
# wait for url being available
color_msg $blue "waiting for $url being available "
until $(curl --output /dev/null --silent --head --fail $url); do
    printf '.'
    sleep 5
done
# open openjscad in browser
open $url

# open shell
docker exec -it $containername /bin/bash
